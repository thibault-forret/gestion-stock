services:
    php:
        build:
            args:
                user: gestion-stock
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: php-fpm
        container_name: php-container
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - web-network
            - db-network
    db:
        image: mariadb:10.5
        container_name: db-container
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_LOG_CONSOLE: "true"
        volumes:
            - ./docker-compose/mariadb:/docker-entrypoint-initdb.d      # Pour les scripts d'initialisation
            - ./db:/var/lib/mysql                                        # Pour les données de la base de données
            - ./docker-compose/mariadb/logs:/var/log/mysql             # Pour les logs de MariaDB
            - ./docker-compose/mariadb/my.cnf:/etc/mysql/my.cnf        # Fichier de configuration (pour les logs)
            # Log ne fonctionnent pas
        networks:
            - pma-network
            - db-network

    nginx:
        image: nginx:alpine
        container_name: nginx-container
        restart: unless-stopped
        ports:
            - 443:80
        volumes:
            - ./public:/var/www/public                            # Monté pour l'application web
            - ./docker-compose/nginx/gestion-stock.conf:/etc/nginx/conf.d/default.conf # Configuration de Nginx
            - ./docker-compose/nginx/logs:/var/log/nginx          # Pour les logs de Nginx
        networks:
            - web-network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin-container
        restart: unless-stopped
        environment:
            PMA_HOST: db
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        ports:
            - 8080:80
        networks:
            - pma-network

networks:
    web-network:
        driver: bridge
    pma-network:
        driver: bridge
    db-network:
        driver: bridge